// <auto-generated />
using System;

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(RepositoryDbContext))]
    [Migration("20210710111424_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Domain.Entities.Article", b =>
            {
                b.Property<Guid>("Id")
                    .HasColumnType("uuid");

                b.Property<string>("Created")
                    .HasMaxLength(60)
                    .HasColumnType("timestamp without time zone");

                b.Property<DateTime>("Content")
                    .HasColumnType("character varying(32500)");

                b.HasKey("Id");

                b.ToTable("Article");
            });

            ///////////////////////

            modelBuilder.Entity("Domain.Entities.User", b =>
            {
                b.Property<Guid>("Id")
                    .HasColumnType("uuid");

                b.Property<string>("FirstName")
                    .HasMaxLength(60)
                    .HasColumnType("character varying(60)");

                b.Property<string>("LastName")
                    .HasMaxLength(60)
                    .HasColumnType("character varying(60)");

                b.Property<string>("UserName")
                    .HasMaxLength(100)
                    .HasColumnType("character varying(100)");

                b.HasKey("Id");

                b.ToTable("User");
            });

            ///////////////////////

            modelBuilder.Entity("Domain.Entities.ArticleUser", b =>
            {
                b.HasOne("Domain.Entities.Article", null)
                    .WithMany("ArticleUser")
                    .HasForeignKey("ArticleId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();
            });

            modelBuilder.Entity("Domain.Entities.Article", b =>
            {
                b.Navigation("ArticleUser");
            });


            ///////////////////////

            modelBuilder.Entity("Domain.Entities.ArticleUser", b =>
            {
                b.HasOne("Domain.Entities.User", null)
                    .WithMany("ArticleUser")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();
            });

            modelBuilder.Entity("Domain.Entities.User", b =>
            {
                b.Navigation("ArticleUser");
            });
#pragma warning restore 612, 618
        }
    }
}
